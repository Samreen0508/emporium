WAQTD the number of times char 'A' is present in BANANA !!!

select length('BANANA')-length(replace('BANANA')) FROM DUAL;

Write a query to get the details of the employees where the length of the first name greater than or equal to 8.
select *from employee where length(first_ name)>=8;

select job_id concat (emp id,'') from employee;
select empno,concat(deptno,'') from emp group by deptno;

Write a query to get the details of the employees where the length of the first name greater than or equal to 8.
select *from employee where length(first_ name)>=8;

display leading zeros before maximum and minimum salary.
select sal,lpad(max(sal),7,0) 'Maxsalary',lpad(min(sal),7,0) 'Minsalary' from jobs;

Write a query to append '@example.com' to email field.
update employees set email=concat(email,'@gmail.com') from employee;

write a query to empno,hired month of employee
select To_Char(hiredate,'MON') FROM EMP WHERE ENAME='SMITH';
select To_Char(HIREDATE,'MM') from emp where ename='Smith';


Write a query to find all employees where first names are in upper case.
SELECT ENAME FROM EMP WHERE ENAME=UPPER(ENAME); 


 Write a query to get the locations that have minimum street length.
 SELECT LENGTH(STREET NAME)< (SELECT(MIN(LENGTH(STREET)) FROM JOBS);
 
 Write a query to fetch the EmpFname from the EmployeeInfo table in upper case and use the ALIAS name as EmpName.
SELECT UPPER(EmpFname) AS EmpName FROM EmployeeInfo;

Write a query to fetch the number of employees working in the department ‘HR’.
SEELECT COUNT(*) FROM EMO WHERE JOB='HR';

Write a query to fetch details of employees whose EmpLname ends with an alphabet ‘A’ and contains five alphabets.
 SELECT ENAME FROM EMP WEHERE ENAME LIKE '----A';

Write a query to retrieve duplicate records from a table.
SELECT EmpID, EmpFname, Department COUNT(*) 
FROM EmployeeInfo GROUP BY EmpID, EmpFname, Department 
HAVING COUNT(*) > 1;

select distinct e.empno,e.ename,d.dname
from emp e,dept d
where e.deptno=d.deptno;

select distinct e.empno,e.ename,d.dname
from emp e,dept d
where e.deptno != d.deptno;
select *from emp where deptno=&deptno;

Question paper

 Write a SELECT statement that lists the last names of students living in either zip code
10048, 11102, or 11209.
select last_name from student_1 where zip in(10048,11102,11209);


Write a SELECT statement that lists descriptions of courses for which there are prerequisites
and that cost less than 1100.
select *from course
select course_no,description,prerequisite from course where prerequisite is not null
and cost<1100;

4. Show the salutation, first name, and last name of students with the last name Grant. Order
the result by salutation in descending order and by first name in ascending order.
select salutation,first_name,last_name from student1
where last name='Grant'
order by salutation desc
order by first_name;

5.Write a SQL statement to retrieve students who have a last name with the lowercase letter
o occurring three or more times.
select last_name from student_1 
where last_name like '%o,o,o%';

6. Using functions in the SELECT list and WHERE and ORDER BY clauses, write a SELECT
statement that returns course numbers and course descriptions from the COURSE table and
looks like the following result set. Use the SQL Developer Run Script icon to display the
result in fixed-width format.
Description
204.......Intro to SQL
130.......Intro to Unix
25........Intro to Programming
230.......Intro to the Internet
120.......Intro to Java Programming
240.......Intro to the BASIC Language
20........Intro to Information Systems
select course_no||'.......'||description from course;
select rpad(course_no,7,'.')||description from course;

7. List the last names, first names, and phone numbers of students who do not have phone
numbers. Display 212-555-1212 for the phone number.
select last_name,nvl(phone,'212-555-212') from student_1;

8. Write a SELECT statement that determines the total number of students enrolled. Count
each student only once, no matter how many courses the student is enrolled in.
select *from enrollment;
select count(distinct(student_id)) from enrollment;


9. Determine the average cost for all courses. If the course cost contains a null value,
substitute the value 0.
select *from course
select avg(cost),nvl(course_no,0)  from course;


Write a SELECT statement that determines the date of the most recent enrollment.
select max(enroll_date) from enrollment;

Write a SELECT statement that determines the date of the most recent enrollment.
select *from enrollment;
select max(enroll_date) from enrollment;

11. Show a list of prerequisites and count how many times each appears in the COURSE table.
Order the result by the PREREQUISITE column.
select count(prerequisites) from course
group by prerequisites
having count>1;
order by prerequisites;

11. Show a list of prerequisites and count how many times each appears in the COURSE table.
Order the result by the PREREQUISITE column.
select *from course
select count(prerequisite) from course
group by prerequisite
order by prerequisite;


12. Show all the different companies for which students work. Display only companies in which
more than four students are employed.
select

13. Select the course description, section number, and location for sections meeting in location
L211.
select *from course
select *from section
select *from enrollment
select c.description,

13. Select the course description, section number, and location for sections meeting in location
L211.
select *from course
select *from section
select *from enrollment
select c.description,s.section_no,s.location 
from course c inner join section s
on s.course_no=c.course_no
where location='L211';

14. Show the course description, section number, starting date and time of the courses Joseph
German is taking.
select *from section;
select *from course;
select c.description,s.section_no,s.start_date_time 
from section s inner join course c
where instructor='Joseph German';

15. Using a subquery construct, determine which sections the student Henry Master is enrolled
in.
select *from section;
select *from enrollment;
SELECT section_id
  FROM enrollment
 WHERE student_id IN
       (SELECT student_id
          FROM student
         WHERE last_name = 'Masser'
           AND first_name = 'Henry')

16. Select the student ID, course number, enrollment date, and section ID for students who
enrolled in course number 20 on January 30, 2007.
roll
select *from course;
select *from enrollment;
select e.student_id,c.course_no,e.enroll_date,e.section_id
from course inner join enrollment
ON course_no=20 and enroll_date=30-01-2007;




















 


 






